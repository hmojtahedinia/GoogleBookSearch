{"version":3,"sources":["utils/API.js","components/Jumbotron/index.js","components/Grid/index.js","components/SavedResult/index.js","pages/SaveBooks.js","components/SearchForm/index.js","components/SearchResult/index.js","pages/SearchBooks.js","pages/NoMatch.js","components/Nav/index.js","components/Footer/index.js","App.js","registerServiceWorker.js","index.js"],"names":["API","getGoogleSearchBooks","query","axios","get","getBooks","getBook","id","saveBook","savedBooks","post","deleteBook","delete","Jumbotron","_ref","children","react_default","a","createElement","className","Container","fluid","concat","Row","_ref2","Col","_ref3","size","split","map","join","SavedResult","props","length","savedbook","book","key","title","_id","src","image","alt","authors","description","onClick","handleDeleteButton","href","link","target","rel","SaveBook","state","then","res","_this","componentDidMount","catch","err","console","log","_this2","this","setState","data","components_Jumbotron","components_SavedResult","Component","SearchForm","value","search","type","name","placeholder","onChange","handleInputChange","handleFormSubmit","SearchResult","books","searchBook","author","event","handleSavedButton","SearchBooks","error","savedBookToDB","preventDefault","items","Error","results","result","volumeInfo","imageLinks","thumbnail","infoLink","filter","components_SearchForm","components_SearchResult","NoMatch","role","aria-label","Nav","Footer","App","react_router_dom","components_Nav","react_router","exact","path","component","SaveBooks","components_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ca5b8e18.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  // Get book from google search\n  getGoogleSearchBooks: function(query) {\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query);\n  },\n\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n\n  // Saves a book to the database\n  saveBook: function(savedBooks) {\n    return axios.post(\"/api/books\", savedBooks);\n  },\n\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  }\n};\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div className=\"jumbotron jumbotron-fluid d-flex align-items-center\">\n      <div className=\"container text-center\">{children}</div>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\nimport { Row, Col } from \"../Grid\";\n\nconst SavedResult = props => {\n  return props.savedBooks.length === 0 ? (\n    <div className=\"card\">\n      <div className=\"card-body player\">\n        <div className=\"article\">\n          <h3>Books that You Saved</h3>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"card\">\n      <div className=\"card-body player\">\n        <div className=\"article\">\n          <h3>Books that You Saved</h3>\n          {props.savedBooks.map((savedbook, book) => {\n            return (\n              <li className=\"saved-list list-group-item\" key={book}>\n                <Row\n                  className=\"SearchResult\"\n                  id={savedbook.title + \"Card\"}\n                  key={savedbook._id}\n                >\n                  {/* col-3 show image of the book */}\n                  <Col size=\"2\" className=\"bookImage\">\n                    <img src={savedbook.image} alt={savedbook.title} />\n                  </Col>\n                  <Col size=\"1\" className=\"emptyCol\" />\n                  {/* col-9 show information of the book */}\n                  <Col size=\"9\" className=\"bookInfo\">\n                    <Row>\n                      <h2 className=\"bookTitle\">{savedbook.title}</h2>\n                    </Row>\n                    <Row>\n                      <h3 className=\"bookAuthor\">{savedbook.authors}</h3>\n                    </Row>\n                    <Row>\n                      <p className=\"bookDescription\">{savedbook.description}</p>\n                    </Row>\n                  </Col>\n                </Row>\n                <br />\n                <Row className=\"buttonDiv \">\n                  <button\n                    className=\"deleteBook btn btn-danger hvr-ripple-out\"\n                    id={savedbook._id}\n                    onClick={() => props.handleDeleteButton(savedbook._id)}\n                  >\n                    Delete Book\n                  </button>\n                  <a\n                    href={savedbook.link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <button className=\"viewBook btn btn-success hvr-ripple-out\">\n                      View Book\n                    </button>\n                  </a>\n                </Row>\n              </li>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default SavedResult;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container } from \"../components/Grid\";\nimport SavedResult from \"../components/SavedResult\";\n\nclass SaveBook extends Component {\n  state = {\n    savedBooks: []\n  };\n\n  //when this component mounts, grab all books that were save to the database\n  componentDidMount() {\n    API.getBooks()\n      .then(res => this.setState({ savedBooks: res.data }))\n      .catch(err => console.log(err));\n  }\n\n  //function to remove book by id\n  handleDeleteButton = id => {\n    API.deleteBook(id)\n      .then(res => this.componentDidMount())\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <Container fluid className=\"container\">\n        <Jumbotron />\n        <Container>\n          <SavedResult\n            savedBooks={this.state.savedBooks}\n            handleDeleteButton={this.handleDeleteButton}\n          />\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default SaveBook;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst SearchForm = props => {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label className=\"BookSearchLabel\">\n          <h3>Search For Book</h3>\n        </label>\n        <br />\n        <input\n          className=\"col-12 form-control\"\n          value={props.search}\n          type=\"text\"\n          name=\"searchBook\"\n          placeholder=\"Enter Book's Name\"\n          onChange={props.handleInputChange}\n        />\n      </div>\n      <button\n        type=\"submit\"\n        className=\"submitBtn btn btn-primary hvr-ripple-out\"\n        onClick={props.handleFormSubmit}\n      >\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import React from \"react\";\nimport \"./style.css\";\nimport { Row, Col } from \"../Grid\";\n\nconst SearchResult = props => {\n  return props.books.length === 0 ? (\n    <div className=\"card\">\n      <div className=\"card-body player\">\n        <div className=\"article\">\n          <h3>Search Results</h3>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"card\">\n      <div className=\"card-body player\">\n        <div className=\"article\">\n          <h3>Search Results</h3>\n          {props.books.map((searchBook, book) => {\n            return (\n              <li className=\"search-list list-group-item\" key={book}>\n                <Row\n                  className=\"SearchResult row\"\n                  id={searchBook.title + \"Card\"}\n                  key={searchBook._id}\n                >\n                  {/* col-3 show image of the book */}\n                  <Col size=\"2\" className=\"bookImage\">\n                    <img src={searchBook.image} alt={searchBook.title} />\n                  </Col>\n                  <Col size=\"1\" className=\"emptyCol\" />\n                  {/* col-9 show information of the book */}\n                  <Col size=\"9\" className=\"bookInfo\">\n                    <Row>\n                      <h3 className=\"bookTitle\">{searchBook.title}</h3>\n                    </Row>\n                    <Row>\n                      <h4 className=\"bookAuthor\">{searchBook.author}</h4>\n                    </Row>\n                    <Row>\n                      <p className=\"bookDescription\">\n                        {searchBook.description}\n                      </p>\n                    </Row>\n                  </Col>\n                </Row>\n                <br />\n                <Row className=\"buttonDiv \">\n                  <button\n                    className=\"saveBook btn btn-primary hvr-ripple-out\"\n                    id={searchBook.id}\n                    onClick={event => props.handleSavedButton(event)}\n                  >\n                    Save Book\n                  </button>\n                  <a\n                    href={searchBook.link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <button className=\"viewBook btn btn-success hvr-ripple-out\">\n                      View Book\n                    </button>\n                  </a>\n                </Row>\n              </li>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default SearchResult;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResult from \"../components/SearchResult\";\nimport \"./style.css\";\n\nimport axios from 'axios'\n\nclass SearchBooks extends Component {\n  //create state\n  state = {\n    search: \"\",\n    books: [],\n    error: \"\",\n    savedBookToDB: false\n  };\n\n  //function to take value of what enter in the search bar\n  handleInputChange = event => {\n    this.setState({ search: event.target.value });\n  };\n\n  //function to control the submit button of the search form\n  handleFormSubmit = event => {\n    event.preventDefault();\n    // once it clicks it connects to the google book api with the search value\n    API.getGoogleSearchBooks(this.state.search)\n      .then(res => {\n        if (res.data.items === \"error\") {\n          throw new Error(res.data.items);\n        } else {\n          // store response in a array\n          let results = res.data.items;\n          //map through the array\n          results = results.map(result => {\n            //store each book information in a new object\n            result = {\n              key: result.id,\n              id: result.id,\n              title: result.volumeInfo.title,\n              author: result.volumeInfo.authors,\n              description: result.volumeInfo.description,\n              image: result.volumeInfo.imageLinks.thumbnail,\n              link: result.volumeInfo.infoLink\n            };\n            return result;\n          });\n          // reset the sate of the empty books array to the new arrays of objects with properties geting back from the response\n          this.setState({ books: results, error: \"\" });\n        }\n      })\n      .catch(err => this.setState({ error: err.items }));\n  };\n\n  handleSavedButton = event => {\n    // console.log(event)\n    event.preventDefault();\n    // console.log(this.state.books);\n    let savedBooks = this.state.books.filter(\n      book => book.id === event.target.id\n    )[0];\n    console.log(savedBooks)\n    API.saveBook(savedBooks)\n      .then(this.setState({ savedBookToDB: true }))\n      .catch(err => console.log(err));\n  };\n  render() {\n    return (\n      <Container fluid>\n      {/* { this.state.savedBookToDB ? \"jhsgkjhrg\" : \",mshfkegshf\"} */}\n        <Jumbotron>\n          <h1 id=\"title02\" className=\"text-white\">\n            Find Your Favorite Books with GoogleBook API\n          </h1>\n        </Jumbotron>\n        <Container>\n          <Row>\n            <Col size=\"12\">\n              <SearchForm\n                handleFormSubmit={this.handleFormSubmit}\n                handleInputChange={this.handleInputChange}\n              />\n            </Col>\n          </Row>\n        </Container>\n        <br />\n        <Container>\n          <SearchResult\n            books={this.state.books}\n            handleSavedButton={this.handleSavedButton}\n          />\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default SearchBooks;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1 className=\"text-white\">404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-primary bg-primary\">\n      <div id=\"navbarNav\">\n        <h2 id=\"title1\" className=\"text-white\">\n          Google Book Search\n        </h2>\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\" id=\"home\">\n            <a className=\"nav-link\" href=\"/\">\n              <button\n                type=\"button\"\n                className=\"btn btn-info text-white  hvr-ripple-out\"\n              >\n                Search Books\n              </button>\n            </a>\n          </li>\n          <li className=\"nav-item\" id=\"report\">\n            <a className=\"nav-link\" href=\"/saved\">\n              <button\n                type=\"button\"\n                className=\"btn btn-warning text-white  hvr-ripple-out\"\n              >\n                Saved Books\n              </button>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Footer = () => (\n  <footer className=\"page-footer\">\n    <div className=\"container-fluid text-center\">\n      <p>&copy; Ganimed Consulting | Toronto </p>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport SaveBooks from \"./pages/SaveBooks\";\nimport SearchBooks from \"./pages/SearchBooks\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={SearchBooks} />\n          <Route path=\"/saved\" component={SaveBooks} />\n          <Route exact path=\"/saved/:id\" component={SaveBooks} />\n          <Route component={NoMatch} />\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}